@page "/tutorial_video"
@page "/tutorial_video/{title}/{url}"
@page "/tutorial_video/{title}/{url}/{formurl}"
@using System.Text.Encodings.Web
@inject IStringLocalizer<App> localizer
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager

<style>
    h1 {
        padding-top: 25px;
        padding-bottom: 25px;
        color: ghostwhite;
    }

    .container {
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        text-align: center;
    }

    .fluidMedia {
        width: 100%;
        overflow: hidden;
    }

    .fluidMedia iframe {
        width: 1024px;
        height: 768px;
        border-radius: 20px;
    }

    .description {
        padding-top: 25px;
        padding-bottom: 25px;
    }

    .description p {
        color: ghostwhite;
        text-align: left;
    }

    #tvp-instructions {
        color: ghostwhite;
    }

    #tvp-instructions li {
        color: ghostwhite;
        text-align: left;
    }

    #tvp-test-btn {
        width: 50%;
        margin-top: 50px;
        background-color: transparent;
        border: 1px solid orangered;
        color: orangered;
    }

    #tvp-test-btn:hover {
        background-color: orangered;
        color: ghostwhite;
    }
</style>

<div class="container">
    <h1 id="title">@Title</h1>

    <div class="fluidMedia">
        <iframe id="tvp-video" src="@Url?autoplay=0&showinfo=0&controls=0&modestbranding=1&rel=0&enablejsapi=1" />
    </div>

    <div class="description">
        <StandardHeaderOne Underlined="true">@localizer["TVP_Instructions"]</StandardHeaderOne>
        <p>@localizer["TVP_Instruction_Steps_P1"]</p>
        <ol id="tvp-instructions">
            <li>@localizer["TVP_Instruction_Steps_UL1"]</li>
            <li>@localizer["TVP_Instruction_Steps_UL2"]</li>
        </ol>
        <button id="tvp-test-btn" type="button" class="btn btn-primary"
            @onclick="GoToTest">@localizer["TVP_Test_Button"]</button>
    </div>
</div>

@functions {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Url { get; set; }
    [Parameter]
    public string FormUrl { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("thisAppFunctions.SetupTutorialYTVideo", "tvp-video", "tvp-test-btn");
    }

    protected override void OnParametersSet()
    {
        Title = Title ?? "";
        Url = Url ?? "";
        FormUrl = FormUrl ?? "";
    }

    private void GoToTest()
    {
        var url = "/test_form/" + Title + "/" + UrlEncoder.Create().Encode(FormUrl);
        navigationManager.NavigateTo(url);
    }
}